)
attach(datos_desalojo_renabap)
datos_desalojo_renabap %>%
ggplot() +
aes(x = renabap, fill = intento_desalojo) +
labs(x = "Tiene RENABAP",
y = "Porcentaje intento desalojo",
fill = "Intento desalojo") +
geom_bar(position = "fill") # position = fill, dodge, stack
detach(datos_desalojo_renabap)
#install.packages("dplyr")
library(dplyr)
#install.packages("ggrepel")
library(ggrepel)
#install.packages("forcats")
library(forcats)
#Re-clasificamos las variables (según criterio [VER NOTA])
datos_refactorizados<- datos %>%
mutate(propiedad_reclasificada=case_when(propiedad %in% c("Propio con algún comprobante de tenencia","Propio sin títulos")~"Propia",
TRUE ~ "No propia"))
#hacer el gráfico(datos)
grafico_torta <- datos_refactorizados %>%
count(propiedad_reclasificada) %>% mutate(valor=round(n/sum(n)*100,1), #Cuanta cuantos casos hay x grupo y calcula su porcentaje
grupo=propiedad_reclasificada) %>% #lo renombramos
mutate(csum=rev(cumsum(rev(valor))), #ubicamos etiquetas
pos=valor/2+lead(csum,1),  #posición etiquetas
pos=if_else(is.na(pos),valor/2,pos))  #Correguimos última etiqueta
#grafico-estetica
ggplot(grafico_torta, aes(x = 3 , y = valor, fill = fct_inorder(grupo))) +  #valor=proprción ,fct_inorder mantiene el orden original de los grupos.
geom_col(width = 1, color = "brown") + #barras==columnas (porciones de la torta)
coord_polar(theta = "y") +   #ahora es un grafico de torta.
scale_fill_brewer(palette = "Pastel1") +  #color.
#EFECTO DONUT:
xlim(c(0.5,4)) +
#ETIQUETAS POR FUERA
geom_label_repel(
aes(y = pos, label = paste0(valor, "%")),  #la fun geom_label_repel evit que las etiquetas se superpongan. Agregamos las etiquetas(porcentaje) fuera del gráfico estilo flecha
size = 4.5,
nudge_x = 0.95, #aleja las etiquetas
show.legend = FALSE) +
#leyenda
guides(fill = guide_legend(title = "Tipo de tenencia de la vivienda")) +
#Titulo
labs(
title = "Gráfico 1. Distribución de los hogares según tipo de tenencia de la vivienda\nDatos de barrios populares de Argentina encuestados, 2023.",
caption="NOTA: Los datos de vivienda propia con comprobante de propiedad y sin título se han agrupado en vivienda propia \n Los datos de vivienda alquilada, prestada, ocupada u otro se han agrupado en vivienda no propia",
) +
#Estilo-gráfico
theme_void()+
theme(
plot.title = element_text(size = 12, face = "bold", hjust = 0.5,vjust=-2),
plot.caption=element_text(size=8,face="italic",hjust=0.5,vjust=5),
legend.background = element_rect(color = "black", linewidth  = 0.5),  # Borde de fondo de la leyenda
legend.spacing = unit(0.5, "cm"),  # Espacio entre los elementos de la leyenda
legend.margin = margin(10, 10, 10, 10)  # Espacio entre el borde de la leyenda y los elementos
)
moda_tenencia_no_propia<-datos_refactorizados %>%
filter(propiedad_reclasificada == "No propia") %>%
count(propiedad, sort = TRUE)%>%
slice(1)
moda_tenencia_propia<-datos_refactorizados %>%
filter(propiedad_reclasificada == "Propia") %>%
count(propiedad, sort = TRUE)%>%
slice(1)
print(moda_tenencia_no_propia)
datos_no_propios <- datos_refactorizados %>%
filter(propiedad_reclasificada == "No propia")
ggplot(datos_no_propios, aes(x = personas_dormitorio)) +
geom_histogram(binwidth = 0.5, fill = "salmon", color = "black") +
labs(title = "Personas por habitación (Tenencia no propia)",
x = "Cantidad de personas por habitación",
y = "Frecuencia",
tag="Gráfico 2.") +
theme_minimal()
datos_propios <- datos_refactorizados %>%
filter(propiedad_reclasificada == "Propia")
ggplot(datos_propios, aes(x = personas_dormitorio)) +
geom_histogram(binwidth = 0.5, fill = "#00E5EE", color = "black") +
labs(title = "Personas por habitación (Tenencia propia)",
x = "Cantidad de personas por habitación",
y = "Frecuencia",
tag="Gráfico 3.") +
theme_minimal()
mediana_no_propia_cant_hab=median(datos_no_propios$personas_dormitorio,na.rm=TRUE)
print(mediana_no_propia_cant_hab)
mediana_propia_cant_hab=median(datos_propios$personas_dormitorio,na.rm=TRUE)
print(mediana_propia_cant_hab)
datos_alquiler <- datos %>%
filter(!is.na(costo_alquiler)) %>%
count(costo_alquiler)
ggplot(datos_alquiler, aes(x = as.factor(costo_alquiler), y = n)) +
geom_bar(stat = "identity", fill = "indianred2", color = "black") +
geom_text(aes(label = n), vjust = 2, color = "#8B0000", size = 3.5) + #etiquetas dentro de rectángulos.
labs(
title = "Frecuencia del costo del alquiler en barrios populares",
x = "Costo del alquiler en pesos",
y = "Cantidad de viviendas",
tag="Gráfico 5",
) +theme(
plot.tag.position = "bottom",
plot.title = element_text(size = 12, face = "bold", hjust = 0.5,vjust=-2)) +
ylim(0, max(datos_alquiler$n) + 1) +  # Ajuste dinámico del eje Y
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
#Calculamos la media aritmética del coste del alquiler:
media_alquiler <- mean(datos$costo_alquiler, na.rm = TRUE)
print(media_alquiler)
#Calculemos el mínimo y máximo:
min_alquiler <- min(datos$costo_alquiler, na.rm = TRUE)
print(min_alquiler)
max_alquiler <- max(datos$costo_alquiler, na.rm = TRUE)
print(max_alquiler)
datos_humedad <- datos %>%
select(
humedad_dormitorios, humedad_cocina,humedad_baño,humedad_living,humedad_sin,humedad_otro
)
#Como las respuetas no cuentan con "sí"/"no" , las refactorizamos:
datos_humedad_expandido <- datos_humedad %>%
mutate(
dormitorio = !is.na(humedad_dormitorios) & humedad_dormitorios != "",
cocina = !is.na(humedad_cocina) & humedad_cocina != "",
baño = !is.na(humedad_baño) & humedad_baño != "",
living = !is.na(humedad_living) & humedad_living != "",
otro = !is.na(humedad_otro) & humedad_otro != "",
ningun_problema = !is.na(humedad_sin) & humedad_sin != ""
)
#TRUE-FALSE
datos_humedad_largo <- datos_humedad_expandido %>%
pivot_longer(
cols = c(dormitorio, cocina, baño, living, otro, ningun_problema),
names_to = "ambiente",
values_to = "hay_humedad"
)
# Gráfico
ggplot(datos_humedad_expandido, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fil="¿Hay humedad?",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format())
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fil="¿Hay humedad?",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format())
datos_humedad <- datos %>%
select(
humedad_dormitorios, humedad_cocina,humedad_baño,humedad_living,humedad_otro
)
#Como las respuetas no cuentan con "sí"/"no" , las refactorizamos:
datos_humedad_expandido <- datos_humedad %>%
mutate(
dormitorio = !is.na(humedad_dormitorios) & humedad_dormitorios != "",
cocina = !is.na(humedad_cocina) & humedad_cocina != "",
baño = !is.na(humedad_baño) & humedad_baño != "",
living = !is.na(humedad_living) & humedad_living != "",
otro = !is.na(humedad_otro) & humedad_otro != "",
#ningun_problema = !is.na(humedad_sin) & humedad_sin != ""
)
#TRUE-FALSE
datos_humedad_largo <- datos_humedad_expandido %>%
pivot_longer(
cols = c(dormitorio, cocina, baño, living, otro, ningun_problema),
names_to = "ambiente",
values_to = "hay_humedad"
)
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fil="¿Hay humedad?",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format())
datos_humedad <- datos %>%
select(
humedad_dormitorios, humedad_cocina,humedad_baño,humedad_living,humedad_otro
)
#Como las respuetas no cuentan con "sí"/"no" , las refactorizamos:
datos_humedad_expandido <- datos_humedad %>%
mutate(
dormitorio = !is.na(humedad_dormitorios) & humedad_dormitorios != "",
cocina = !is.na(humedad_cocina) & humedad_cocina != "",
baño = !is.na(humedad_baño) & humedad_baño != "",
living = !is.na(humedad_living) & humedad_living != "",
otro = !is.na(humedad_otro) & humedad_otro != "",
#ningun_problema = !is.na(humedad_sin) & humedad_sin != ""
)
#TRUE-FALSE
datos_humedad_largo <- datos_humedad_expandido %>%
pivot_longer(
cols = c(dormitorio, cocina, baño, living, otro),
names_to = "ambiente",
values_to = "hay_humedad"
)
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fil="¿Hay humedad?",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format())
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format())
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#FF6347", "FALSE" = "#4682B4"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#steelblue1", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#CD96CD", "FALSE" = "#63B8FF"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Presencia de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
datos_humedad <- datos %>%
select(
humedad_dormitorios, humedad_cocina,humedad_baño,humedad_living,humedad_otro
)
#Como las respuetas no cuentan con "sí"/"no" , las refactorizamos:
datos_humedad_expandido <- datos_humedad %>%
mutate(
dormitorio = !is.na(humedad_dormitorios) & humedad_dormitorios != "",
cocina = !is.na(humedad_cocina) & humedad_cocina != "",
baño = !is.na(humedad_baño) & humedad_baño != "",
living = !is.na(humedad_living) & humedad_living != "",
otro = !is.na(humedad_otro) & humedad_otro != "",
#ningun_problema = !is.na(humedad_sin) & humedad_sin != ""
)
#TRUE-FALSE
datos_humedad_largo <- datos_humedad_expandido %>%
pivot_longer(
cols = c(dormitorio, cocina, baño, living, otro),
names_to = "ambiente",
values_to = "hay_humedad"
)
#Los ordeno para no mezclar valores:
datos_humedad_largo<-datos_humedad_largo %>%
mutate(hay_humedad=factor(hay_humedad,levels=c(TRUE,FALSE)))
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Distribución de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
#Los ordeno para no mezclar valores:
datos_humedad_largo<-datos_humedad_largo %>%
mutate(hay_humedad=factor(hay_humedad,levels=c(FALSE,TRUE)))
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Distribución de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
#Los ordeno para no mezclar valores:
datos_humedad_largo<-datos_humedad_largo %>%
mutate(hay_humedad=factor(hay_humedad,levels=c(TRUE,FALSE)))
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Distribución de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Distribución de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)+
geom_text(
aes(label = scales::percent(..count.. / sum(..count..), accuracy = 0.01)),
position = position_stack(vjust = 0.5),
stat = "count",
size = 3
)
datos_humedad <- datos %>%
select(
humedad_dormitorios, humedad_cocina,humedad_baño,humedad_living,humedad_otro
)
#Como las respuetas no cuentan con "sí"/"no" , las refactorizamos:
datos_humedad_expandido <- datos_humedad %>%
mutate(
dormitorio = !is.na(humedad_dormitorios) & humedad_dormitorios != "",
cocina = !is.na(humedad_cocina) & humedad_cocina != "",
baño = !is.na(humedad_baño) & humedad_baño != "",
living = !is.na(humedad_living) & humedad_living != "",
otro = !is.na(humedad_otro) & humedad_otro != "",
#ningun_problema = !is.na(humedad_sin) & humedad_sin != ""
)
#TRUE-FALSE
datos_humedad_largo <- datos_humedad_expandido %>%
pivot_longer(
cols = c(dormitorio, cocina, baño, living, otro),
names_to = "ambiente",
values_to = "hay_humedad"
)
#Los ordeno para no mezclar valores:
datos_humedad_largo<-datos_humedad_largo %>%
mutate(hay_humedad=factor(hay_humedad,levels=c(TRUE,FALSE)))
datos_humedad_largo <- datos_humedad_largo %>%
mutate(hay_humedad = ifelse(hay_humedad, "Sí", "No")) %>%
mutate(hay_humedad = factor(hay_humedad, levels = c("No", "Sí")))
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Distribución de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)+
geom_text(
stat = "count",
aes(label = scales::percent(..count../tapply(..count.., ..x.., sum)[..x..], accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3
)+
theme_minimal()
datos_humedad <- datos %>%
select(
humedad_dormitorios, humedad_cocina,humedad_baño,humedad_living,humedad_otro
)
#Como las respuetas no cuentan con "sí"/"no" , las refactorizamos:
datos_humedad_expandido <- datos_humedad %>%
mutate(
dormitorio = !is.na(humedad_dormitorios) & humedad_dormitorios != "",
cocina = !is.na(humedad_cocina) & humedad_cocina != "",
baño = !is.na(humedad_baño) & humedad_baño != "",
living = !is.na(humedad_living) & humedad_living != "",
otro = !is.na(humedad_otro) & humedad_otro != "",
#ningun_problema = !is.na(humedad_sin) & humedad_sin != ""
)
#TRUE-FALSE
datos_humedad_largo <- datos_humedad_expandido %>%
pivot_longer(
cols = c(dormitorio, cocina, baño, living, otro),
names_to = "ambiente",
values_to = "hay_humedad"
)
#Los ordeno para no mezclar valores:
datos_humedad_largo<-datos_humedad_largo %>%
mutate(hay_humedad=factor(hay_humedad,levels=c(TRUE,FALSE)))
# Gráfico
ggplot(datos_humedad_largo, aes(x = ambiente, fill = hay_humedad)) +
geom_bar(position = "fill") +
labs(
title = "Distribución de problemas de humedad por ambiente",
x = "Ambiente de la vivienda",
y = "Proporción de viviendas con humedad",
fill="¿Hay humedad?",
tag="Gráfico 6.",
) +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(
values = c("TRUE" = "#63B8FF", "FALSE" = "#CD96CD"), # Cambia los colores
labels = c("Sí", "No") # Cambia el texto de la leyenda
)+
geom_text(
stat = "count",
aes(label = scales::percent(..count../tapply(..count.., ..x.., sum)[..x..], accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3
)+
theme_minimal()
#TRUE-FALSE
datos_humedad_largo <- datos_humedad_expandido %>%
pivot_longer(
cols = c(dormitorio, cocina, baño, living, "otro ambiente"),
names_to = "ambiente",
values_to = "hay_humedad"
)
